<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ZdjecieLogowania.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA4QAAAOEBAMAAAALYOIIAAAABGdBTUEAALGPC/xhBQAAABJQTFRFAAAA
        5ubm////s7OzQ0NDfHx8WvwJSgAAGptJREFUeNrtncly28gSAEEBvBvt8d2A7PsYGt1tSr5bsP3/vzIi
        CWrlUg00u6qIzHgRVDnijUqdrF6xFO2Wpt5C6C5EofsQhe5DFLoPUeg+RKH7EIXuQxS6D1HoPkSh+xCF
        7kMUug9R6D5EofsQhe7DYvgMw78TugtR6D5EofsQhe5DFLoPUeg+RKH7EIXuQxS6D1HoPkSh+xCF7kMU
        ug9R6D5EofuQ80L3IQrdhyh0H6LQfYhC9yEK3YeXq/ANKHQYfry5ufm75vfNzbe62fxbg0L74fqn+ubv
        ffGW6v7n7+cSRaHRMDzW3u17ey+4/x0u6O/dcEEKH/n493txkupvh0Kb4fWtwN9gcV2L3v/ei1P48U8R
        xc9vG4kX8OdfiMLr+yKa6iG0KDQRtu2n78UoqofW/59/CXc2ffxVjGb5bdsSHPkqhs2fYhI/u7ZGoWZ4
        W0zmLjQoVAuvRw6Cr6m+tShUCUP7XwJ/G+5QqBG2H78XyVh23v58/wpD+6lIyoOrP/9l6FRhmDoRfc+d
        oz//VehTYbj+XiRnGVCYLRy9HXOcqkNhrvC2OBMPrcPW8Kjwn+Js3LXuWsOjwv+KM1IGZ63hUeGv4qws
        Q43C84ZnNrh26GzL1Nd5YWjObvDRIUe+ZwxzGFw7ROHZwiwG1w5dtMYQulL4b5GJzZymRmHyMJvBx7VF
        i8IzhP8VRW6HKEwa/lNkZbNPg8KU4aciMz8aFCYNr4vsdA0KE4bX3/MrrLoGhenCX4UCVUBhqjDncuIl
        SxQmCsM/hRI/UJgkDF8LNXoUpgg1pjI7tsOhcYXD53zPeI+z2fHmyHdaqDYQbrlrUDgxVFjTv6ZvUDgp
        bBQHwi1VQOGkUGlF+JKyReGEUHE98czTHfkojA/1u9ENVOHoUHc98UyJwpFh+FQYoUfhuFB9PfHEcGaB
        wsgwGJiN7ihROCK0MRvd0aMwPjQyGx2oUBgdWupG1yxQGBvamcsMdGYVDp/mjsSMFeHjjKbhyDcqNDWX
        2dI3KIwJTc1ltli9oM2mwvClMMgPFMrDxmARPpchCk+HwdxcZssChdLQ3IJiR4dCWWi1CHdbpSg8GRpc
        UOzoUCgJg5GD3n2UKJSEhotwe2KBwhOh5SLcliEKT4Smi3BThig8HtouQouP9zKn0HgRriel1hQOn2bO
        wMyuCXcsG458j4bmi/BxNETh0dB8ET7fgY/CvaHZ3dGXdCg8HHooQnPX59tS6KIIn8oQhe9DH0X4dG6I
        wvdhk7alq/v7vxvu79P+hwsUHggTPiKo+vl7N+nY/fdv/6S7mmOFwv1hqsvWqt9P/9mnXxTW/9LcJirH
        CoX7wySXrVW/v7Xt4deFNLdJvic9CveFKTa4l9+e9g4P/KK2TSFxicJ94fQVRdVJflGSd+d1KHwfTl5R
        VA/S39s2kyUuUPg+nLqiiHor9vTn7RtSOHzqn4FNm8wsY4/xpr6Qe9Vw5Ps2nDSZuYv/vaGZVIgVCt+G
        Uw4Kq1GXd4Zp05oehW/CD+MbcxlG/t72ekLplw0KX4fj2/Ju/O+d1JkGFL4Kv0w2ODKN8fuyKxS+DMfv
        zDy0E9MYPQgvUfgyvJ5gcGoaox12KHwOw4cJBienMdbhFQpfKPw+weD0NEY6rFD4HH6dYjBBGiN/f4/C
        XThyh/tHmyyNcfPSBQp3YTPJYIo0xu16V/pNZ0XhqEVhmTSNcfdy9CjchqP60dQ3iY161I2J+7ZNnBeO
        aLyqS/0Sl1EOQ82R7zoc04/2TfI0xkxLVyjchCP60bvmDFmNmJaWDQrXYXzLbV5Jlz6rERu1AYVhTD9a
        defJasRwuEJhGNOP/mjOlFX8cFg2KBzRj5bt2bKK/zoFFMZ/86szZhXflfYojL9opj9jVvGPaygbFMZ+
        78uzZhW9U1ShMPq8Ppw3q+h8+tkrjO1HV2fOKvo+1eGu7RkrjOxHz39XWGzPPpzdz1dh7FFhhnszY2c0
        2o+h0VYYuTWT4z2CsftsK6Wme1I4fGodekVOALscWUX2DMtGp+msHPnGtVbZZMkqcooVdJrOiMKvJhsr
        sgx7laazovBzVFstcnVZH8akpdWSygrjJvAhW5JRaVVzVhjXVItsSUaWYafQdFYUxi0pMiYZ991aKTSd
        FYVRX/ZFxiTj9v22E2WtltRVGDUUhpxJRpVhNV+FUacCi6xJxh06ddmbrjWiMGooDHmTjPp6rbI3XWtE
        Ycw3PffLkqLKcDMYarWkqsKYoTD7K8tiNo6quSqM6auW2ZOMeoJDV89TYcxQuMqeZNSL2Ve1osLhU+G8
        MGa02V54mDnJiH5e89mWmgojmmi7eM6cZMTyvmpnqTBmKOw0koxJMMxSYcRYMxyM504yYkLTz1FhzDbk
        SifJiC/Z1SwVRnzHg1briFnOUWHERvLuoDB7khFz5jkqjNj96LWSjMixm6FC+WUzlVrrRKx7ruanMGJh
        r9c6EVOuxQwVyr/gen1UxNq1mp9C+WxGcbIXs4MUtJJUUyifKVxpKpT3pGpzLjWF8rbpFBVG9KRXWkmq
        KRTPZpatpkJ5T1pqLV61zgvlTbNe1ysluQ7Fa59KK0m1I19py2zGGK0k25jjiqDVkkqtI57NqF6Wsv5Z
        3F1ovfNAS6G4fyq1FYrnXVrvPFBSKN+bUb1Ec/2zuL9YKCWppVB80hSyNse+UJrpUilJrY5U3C5N1ubY
        F4q/bUpJKikUz/Ou8jbHvlA8bHc6SSopFF/SoHv35SYQf92UXh6jo1C89ah8D/Q2ki4rrnSSVFIonZCW
        FhSKk9VJUkmh9Iu9ytwce0Npr6/0/h+lsVDYKMNQqKxQfLSpk6SOQukMYRgKlRWKB8NOJUkdhdKuqbSh
        UDoY6ryFS+e8ULrU0n7I4BBKv3FXKknqKJR+rbUf9TmE0n5/02nMRKFwz0r9gbu7UKhwOSOF0iZpczfH
        gVDaa6DwLQs1Z29C6dit8jpDFYXSI7jeikJxwvVcFEpneMGKQmm3ofJGShWFwn5J/0UsT6Fwcb++2m4e
        CoXnFKUdheKM56JQuKa4qs0oFPYby9koFHZLvR2FwvlMNReF0p3/YEehdD5To/DNV9qOQmHH0c1EobBX
        Ki0pFO7P9DNRKFwWLmpDCoXzGY0XbGucFwpn6Cu9A8L3ofBrdzWPI1/ppnFnSaHwvKmciULhsrC1pLBG
        4UuFstndsrWkUJh0NROF4i+0JYXC3n8eCoV90lVrqiMVzsHCLBQKZwar1pRC4ZS0m4XCr9LGMKVQmHU/
        C4XC73N2ScdD4a7gahYKZaNKlV3S8VA4Jb2ag0LhjWn53y1yPBSuZuehUDY9L7NLOh6K056DQunXuTWl
        sJZ2HnNQKBtU8r/h50Qom4VVs1Aoagqlu4SOhF/NKhw+M55yyRR2mbM6GQp3JOZw5CtcYClIOhHK8g4z
        UCj7Nm/v7zWlUDaGdzNQ+PWyFfYzUCib2ZX2FMoWhisU2lX4AYVDKLsWbKEh6XgoS/wKhbsvs4ak46Gs
        +1jMQOEHrwpl87CyzZ1kfoWyWUGvIQmFslCmUOXlvcfDBoVDKDuoCBqSToSixPM/pSO/QtkKOXdWklCU
        eP5n5RhVODw/z5bC7yjchoVbhbIhoM2dZPbzwqgRxdJ5oXQUn8GRr6gdytxZCUIUDuG1X4Wy5VDInaRR
        hVovzzkayvaVutxJGlWo9Qqro+FnFG74isLEoVGFq8xZiULZUUWfO0kUykOZQqpw+CpnzooqjAi/+FUo
        7EByJ2lUodZ7cY+G1yjcgMLUIQrlIQq3fEZh4tCowpA5q4QKr3Inmf28MGqLw9Z5oeyQ5Sp3kkYVhsxZ
        oTAipApTh0YV5s4KhRGh7NDNZEfaonATyRRmzgqFMSEKk2eVuTmowvRZ5W4OxsLkWWVuDqowfVa5m4Mq
        TJ5V5uagCtNnlbs5UJg8q8zNQRWmzyp3czAWJs9q+DR2Xpg7K+HJnIRF9qxyN8flK2xyZ5W7ORwrlJ1U
        UIWGFVKFW6jC1CEKYxpLpJAqdK8we1a5m4MqTJ5V7uZgLEwdojCmsUQKqUK7CqnCLVRh8qxyNwcz0uRZ
        5W6Oi1eY/7aY3M1x+WNh9o50+OTUXhCKUufUHoUtp/ZnbCwU1lQhVagbonATUYXJs8rdHChMnlXm5qAK
        02eVuzkYC5Nnlbk5qML0WeVuDqoweVaZm4MqTJ9V7uZAYfKs8jZHEL5ENAwM/18j4ewVhs2/Oa5Cq48O
        Gj7Pfqz1+NPNn/tiFtz//L376y/nyLdtP/0pZsXPbxelMLQ334vZUX27HIXt9a9ilizDhShsb4vZ8nAZ
        Cmc2CL7mrm38K5xpJ7pjGRrvCmdu8MmhX4WzN7hz6FYhBou1Q8cK/y2gWL+Z2K3CLwVs+NE4Vfi1gIG+
        camwmeGm2iGq4FEhA+FLyjMqHD7Tn2PRjb6ib87Uzmc88qUbfUUV3Cn8UMArysaZwusC3tA5U8hc5h2b
        MvSjkCLcQ+9KIXuje1g2jhSyoNhL70ghI+FeHsvQi0JGwgN0bhRShAcoGycKmwIO0DlR+LmAAyxaHwrZ
        HT1I5UMhK4oj9GdQOHwmPMdiMnOEsknWzmc88i3gCMGBQq55OsrKgUL60aMsG/MKWRSeIJhXSD96gpV5
        hfSjJ9jOSS0rLOAE1hWyrj9Jb1wh+6Mn2bwFwbBCrrg4ydK2QpYUAoJphQyFAnrTChkKBawHQ7sKGQoF
        LBMrHD7TnBcyFIpoDR/5cumaiM6wQjZIRazsKgzckSZiYVghsxkRS8MKCxBhVyGzGSHBrEL2ZoT0ZhWy
        NyPkyqpCJqRSFmYVMiEVUppVyM0UQiqzY2EBQqwqZJNbTDCqkDWFmC6lwl0FDf8+JUShmFXCZk+pkHMK
        MVYVsrIXs7CpkJW9HBS6pzSqkDtixFhVyP6amKVRheyvialQ6B2rCgsQg0L3oNA9NhVy1hSBTYWcNUVA
        FbonZbMPn0kOrkBMymZHoQoodE9AoXeoQvdQhe6hCt2DQveg0D2Mhe6hCt1DFbqHKnQPCt2DQvekHAuH
        T84L85Ky2VGogk2FXHgRAVXoHqrQPVShe1DoHhS6x6ZCxsIIqEL3UIXuoQrdg0L3oNA9NhUyFkaQUuHw
        yXlhXlI2OwpVQKF7uILNPVShe6hC91CF7kGhe1DoHsZC91CF7qEK3UMVugeF7kGhe7izyT0pmx2FKthU
        yKl9BFShe6hC91CF7kGhe1DoHpsKGQsjoArdQxW6hyp0Dwrdg0L32FTIWBhBSoXDJ+eFeUnZ7ChUAYXu
        4Qo291CF7qEK3UMVugeF7kGhexgL3UMVuocqdA9V6B4UugeF7uHOJvekbHYUqmBTIaf2EVCF7qEK3UMV
        ugeF7kGhe2wqZCyMgCp0D1XoHqrQPSh0DwrdY1MhY2EEKRUOn5wX5iVls6NQBRS6hyvY3EMVuocqdA9V
        6B4UugeF7mEsdA9V6B6q0D1UoXtQ6B4Uuoc7m9yTstlRqIJNhZzaR0AVuocqdA9V6B4UugeFQqr7+79/
        f95/L8xhU6G1sfD+5mn123z8U9iCKjzN70d94UWS17eFJajCU9yFt0k+pmmpEqnC41TdviRD+9HOoIjC
        o9wdSrJt/iuMgMJjPBxJsrUyItpUaGQsfDiaZPu1MEFKhcPnxZwX9ieSbD8VFkjZ7BemsD+Zsw2HKDxE
        L8i5/afQhyvYDvBDlHNrYF5ao3AvS2HO7a9CG6pwL1WQ5tyor/FrFO6jl+esvrRA4T4WETm3/xa6oHAP
        VVTOrXJXyli4h6Ebleas3JXWKHzHsonMWbcrpQrf08XmfF1oUqPwLWUTnfOHQhEUvqOLz1n1ZAWFb1k0
        I3L+XOjBnU1vCWNy1izDlM1+EQoXo3IOipNSmwoVv9TduJwVJ6U2FepVYTkyZ8UytKlQrwr7sTnrbdHY
        VKhWhdXonIPaTikKX7Ear1DtGgwUviKMz1mt87epUKs5ygk5q01obCrUqsLVlJy/FDrYVKhVhWHSn1Do
        YFOhUhWWzaQ/QaknReELVpNybpV6UhS+IExTqNST2lSoMxaWzUSFOj1pSoXDp9vzwtW0nLXmpCmb3bvC
        bqpCneMKFD5RtVMV6uyTcgXbE4vpClUGwxqFO1aTFeoMhlThE2G6QpXBsEbhwOaocOKfoDIYonDH5pRi
        qkKNwRCFO67a6QprjetJGQt3bK6amfonaFxBU6NwYHLOm0AhcapwYHvh09Q/QWM+U6Nwy/aai8kKFeYz
        KBzYzGamd6QKt6mhcGB72czkP0Fhf4Y7mwa6yTlvAoX9mZTN7lrh9Jy3Uf7MbSrMf2pfbX/z9D8h/5TU
        psL8VbhMpTD/M9lsKsxfhWUqhfmnpDYV5q/CxfSct1H+XVIUblmlUph/VYHCLX0qhfk3um0qzD8WdqkU
        5l8Y2lSYvwqTKcz/7bOpMH871KkU5l/b21SYvQqHlX0KhdnX9ijcgEIUPofZt2dsKsw+Fi5RuFE4fHo8
        LywT5DxE2c/tUza7Y4ULFKLwKcy+z80VbBsSVmF2hTUK11CF7hVeJVNIFbpXWKPQu0Kq0L1CxkL3CqlC
        JYXMSFHYUoUXo5AZqXuF7JEqKfR8UsGdTRs4L9w2OwpRqHdqz7UzqRXmv44UhYkVch1pBDYVcjV3BCjc
        wj0V7hVyZ1Nihfl7I+4vTKyQu3wjsKnQ8b32+Z/gZVMhT7yIAIVbeO6Me4U8/SmxQoV3NvEMttr7O5v8
        PgkxZbO7VpjmeaSB55HqKfT7VGCuYBvg2dzuFW5fxTz5T9BIHIUDvKeCt8Wsf9Z4WwwKd/DOJt6cVuvM
        ZhgLnwnTFfL+Ql2FvEWUd/nyLl9thV7fqI3CZ3ivvXuFq6kKVYZC7mx6wbKZeF6oMhRyav+SMFFhoYJN
        hQqn9mtW0xTq9KNU4UvKZtKfoNOPUoWvCJP+hEIHmwqVqnC4gGZkzkr9KApfUU7IOSj1oyh8TRifs1bn
        z1j4mtXonMM/hRI2FapVYTVeocr+6BqbCtWqcHsFzZicNa6a2WJToVoVDhOa+JzVJjMofEc3LmedQ4oN
        KHzDYlTOikXIWPiOMCZnxSLkzqZ3LJoROWtcP7ojZbNfhsL1nYaxOWv2Gih8T9lE56xwS9ozXMH2ni42
        Z82RkCrcx7KJzPlXoQlVuIe+jcpZb2NmQ43C91RRObdqu6NbULiPmAfmt4qr+g0o3Esvzlm7G2UsPMDQ
        lQpybpS7UarwEEthzsqz0TVU4QF+iHJu/yvUqVF4gF6Qc6t2tcULUHiQ/mTO7afCACg8TH8iSRsGubPp
        GA9Hk2zVlxNbUjb7xSncOdx7sUx7W9jApkLV87eX3B1KMjQG5qJbbCq0UoWPa/xuX5Kh/ai+on/CpkIz
        VfjIXXib5GOafwo7UIWn+b2esL1I8tpMH7oBhRLub57m3c1HSxW4BoVCqvv7v3//3NsZAp+wqdDSWGge
        qtA9VKF7qEL3oNA9KHSPTYWMhRGkVDh8Xsx5oRNSNjsKVUChe7iCzT1UoXuoQvdQhe5BoXtQ6B7GQvdQ
        he6hCt1DFboHhe5BoXu4s8k9KZsdhSrYVMipfQRUoXuoQvdQhe5BoXtQ6B6bChkLI6AK3UMVuocqdA8K
        3YNC99hUyFgYQUqFwyfnhXlJ2ewoVAGF7uEKNvdQhe6hCt1DFboHhe5BoXsYC91DFbqHKnQPVegeFLoH
        he7hzib3pGx2FKpgUyGn9hFQhe6hCt1DFboHhe5BoXtsKmQsjIAqdA9V6B6q0D0odA8K3WNTIWNhBCkV
        Dp+cF+YlZbOjUAUUuocr2NxDFbqHKnQPVegeFLoHhe5hLHQPVegeqtA9VKF7UOgeFLqHO5vck7LZUaiC
        TYWc2kdAFbqHKnQPVegeFLoHhe6xqZCxMAKq0D1UoXuoQveg0D0odI9NhYyFEaRUOHxyXpiXlM2OQhVQ
        6B6uYHMPVegeqtA9VKF7UOgeFLqHsdA9VKF7qEL3UIXuQaF7UOge7mxyT8pmR6EKNhVyah+BTYWhADEo
        dA8KvVMZVfi9ACEodI9Vhb8KELI0qvDfAoSURhV+KEAICt2zsKmw/lyAEKsKvxQgZGVU4dcChCRVOHym
        OLhCoZguYbOnVMhRhZhgVCEHhmJaowrZYZNSmVXIDpuQ0qxC1vZCFlYVsraXsjKrkFWFkN6swusCRASz
        Crn0QkhrVyFTUhFLwwqZkopY2FXIWYWMlWGFzGdEdIYVsksqok2rcPhMcXD1+CPzGQHLZnI7vwwTK2R/
        RsDCtEL2ZwT0tWWFnPoKCKYVMhieZj0UWlbIYHiShXGFDIYn6WvbCnnsxUka6wq5N+YEpXmFbJOeYFVb
        V0hPeoJgXyE96VGWjX2F9KRHWdX2FdKTHiV4UEhPeoSySa9w+Ex0XriG1f0R+nTtfKYj382XhFsrDrJ7
        WIlxhYF90oMsnCjkxOkgXfChkAnNIcrGi0IuZDtAV3tRSBnuZ9n4Uci6Yi997Uch11/sY7096kcho+Ee
        utqTQkbD92z21hwppAzf0dW+FLbcp/aG7Qa3J4XslL6mCrU7hSwsXtE3Z1M4fCY8LxxCnvP8kvJs7Vyf
        T2Hd0JU+UQWXCpmVPtM3PhVyJdSOH03tVCEL/C3rp+Z5Vche6ZplqB0rxOFg0LFCHC5D41zh3B0OBl0r
        bP4UM+Zu1xyeFbbtbTFbHs5ZG9kUPi6JrmfamS5DeyEK69DezHCzrfp29obNp3D986eZDYk/v2Vp2HwK
        N0cjN3/ui1lw//P300wgg8L6qYU3nDEMm1+b4RfNLCwy/+KnK9LD44+P/7vc8GIVEiYPUeg+RKH7EIXu
        QxS6D1HoPkSh+xCF7kMUug9R6D5EofsQhe5DFLoPs50XEp4rRKH7EIXuQxS6D1HoPkSh+xCF7kMUug9R
        6D5EofsQhe5DFLoPUeg+RKH7EIXuQ84L3YcodB+i0H2IQvchCt2HKHQfotB9iEL3IQrdhyh0H6LQfYhC
        9yEK3YcodB+i0H3IeaH7EIXuQxS6D1HoPkSh+xCF7kMUug9R6D5EofsQhe5DFLoPUeg+RKH7EIXuQxS6
        DzkvdB+i0H2IQvchCt2HKHQfotB9iEL3IQrdhyh0H6LQfYhC9yEK3YcodB+i0H2IQudh2/4PBgCp3kjB
        EzkAAAAASUVORK5CYII=
</value>
  </data>
</root>